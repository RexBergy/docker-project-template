# To build a container, you will use the docker build command
# https://docs.docker.com/engine/reference/commandline/build/
#
#   docker build -t <IMAGE TAG> -f Dockerfile.streamlit .
#

# https://docs.docker.com/engine/reference/builder/#from
# You shouldn't need to change this
FROM python:3.7

# https://docs.docker.com/engine/reference/builder/#workdir
# Create and cd into /code as your working directory
WORKDIR /code

# The main docker commands you will find useful:
# 
# Add a file or directory
# https://docs.docker.com/engine/reference/builder/#add
#
#       ADD ./<SOURCE_DIR/FILE> ./<DOCKER_DIR/FILE>
#
# Copy the Streamlit app
ADD streamlit_app.py /code/

# Copy the ift6758 module
ADD ift6758 /code/ift6758

# Copy the requirements file
ADD ift6758/requirements.txt /code/

# Run a shell command (tip: chain shell commands with && rather than multiple RUN commands)
# https://docs.docker.com/engine/reference/builder/#run
#
#       RUN <SHELL COMMAND>   
#
# Install dependencies
RUN pip install --upgrade pip && pip install -r requirements.txt

# Install the `ift6758` module in editable mode
RUN pip install -e /code/ift6758

# Set an environment variable:
# https://docs.docker.com/engine/reference/builder/#env
#
#       ENV <ENV_VAR>=<DEFAULT>
#
# Expose a port
# https://docs.docker.com/engine/reference/builder/#port
#
#       EXPOSE <PORT>
#
# Expose the Streamlit port
EXPOSE 8501

# Provide default command for executing container
# https://docs.docker.com/engine/reference/builder/#cmd
#
#       CMD <SHELL COMMAND>
#
# Default command to run the Streamlit app
CMD ["streamlit", "run", "streamlit_app.py", "--server.port", "8501", "--server.address", "0.0.0.0"]

# TODO: add code, optionally a default model if you want 

# TODO: specify default command - this is not required because you can always specify the command
# either with the docker run command or in the docker-compose file
